image: rootproject/root-ubuntu16

stages:
  - build
  - test


# Build the project with cmake, including download of BAT.
build:cmake:minimal:
  stage: build
  before_script:
    - mkdir -p build
  script:
    - cd build
    - cmake -DBUILTIN_BAT=TRUE -DKLFITTER_INSTALL_TESTS=TRUE ..
    - make -j || make -j || make -j
  artifacts:
    paths:
    - build
    expire_in: 2 days


# Build the project with cmake, using local version of BAT.
build:cmake:
  stage: build
  when: manual
  allow_failure: true
  before_script:
    - sudo apt-get update
    - sudo apt-get install wget
    - export BATINSTALLDIR=$PWD/external/BAT
    - mkdir -p build KLFitter
    - mv CMakeLists.txt cmake include src tests KLFitter/
  after_script:
    - mv KLFitter/* ./
    - rm -rf KLFitter
  script:
    - ./KLFitter/cmake/CompileBAT.sh $BATINSTALLDIR
    - cd build
    - cmake -DKLFITTER_INSTALL_TESTS=TRUE ../KLFitter
    - make -j || make -j || make -j
  artifacts:
    paths:
    - build
    - external/BAT
    expire_in: 2 days


# Build the project with the traditional Makefile.
build:make:
  stage: build
  when: manual
  allow_failure: true
  before_script:
    - sudo apt-get update
    - sudo apt-get install wget
    - export BATINSTALLDIR=$PWD/external/BAT
  script:
    - ./cmake/CompileBAT.sh $BATINSTALLDIR
    - make -j || make -j || make -j
    - make -j tests || make -j tests
    - make install || make install
  artifacts:
    paths:
    - build
    - external/BAT
    expire_in: 2 days


# Run unit tests based on the cmake minimal setup.
test:cmake:minimal:
  stage: test
  before_script:
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/build/lib
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`root-config --libdir`
  script:
    - ./build/test-bin/test-ljets-lh ./
  dependencies:
    - build:cmake:minimal
